[{"D:\\informatyka-programowanie-nauka\\HTML-JS\\git repo\\Learning-Stuff-GitHub\\React\\MaxSchwarzmüller-Udemy\\FormsInputs\\src\\index.js":"1","D:\\informatyka-programowanie-nauka\\HTML-JS\\git repo\\Learning-Stuff-GitHub\\React\\MaxSchwarzmüller-Udemy\\FormsInputs\\src\\App.js":"2","D:\\informatyka-programowanie-nauka\\HTML-JS\\git repo\\Learning-Stuff-GitHub\\React\\MaxSchwarzmüller-Udemy\\FormsInputs\\src\\components\\SimpleInput.js":"3","D:\\informatyka-programowanie-nauka\\HTML-JS\\git repo\\Learning-Stuff-GitHub\\React\\MaxSchwarzmüller-Udemy\\FormsInputs\\src\\components\\hooks\\use-input.js":"4"},{"size":179,"mtime":1648643023000,"results":"5","hashOfConfig":"6"},{"size":168,"mtime":1648643101000,"results":"7","hashOfConfig":"6"},{"size":3204,"mtime":1648871383005,"results":"8","hashOfConfig":"6"},{"size":705,"mtime":1648871381724,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"ix3g4z",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\informatyka-programowanie-nauka\\HTML-JS\\git repo\\Learning-Stuff-GitHub\\React\\MaxSchwarzmüller-Udemy\\FormsInputs\\src\\index.js",[],["20","21"],"D:\\informatyka-programowanie-nauka\\HTML-JS\\git repo\\Learning-Stuff-GitHub\\React\\MaxSchwarzmüller-Udemy\\FormsInputs\\src\\App.js",[],"D:\\informatyka-programowanie-nauka\\HTML-JS\\git repo\\Learning-Stuff-GitHub\\React\\MaxSchwarzmüller-Udemy\\FormsInputs\\src\\components\\SimpleInput.js",["22","23"],"import { useState, useEffect } from 'react';\nimport useInput from './hooks/use-input';\n\nconst SimpleInput = props => {\n  const {\n    value: enteredName,\n    isValid: enteredNameisValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput,\n  } = useInput(value => value.trim() !== '');\n\n  // const [enteredName, setEnteredName] = useState('');\n  // const [inputIsTouched, setInputIsTouched] = useState(false);\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailInputIsTouched, setEmailInputIsTouched] = useState(false);\n\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const ValidateEmail = mail => {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)) {\n      return true;\n    }\n    return false;\n  };\n\n  // const enteredNameisValid = enteredName.trim() !== '';\n  // const nameInputIsInvalid = !enteredNameisValid && inputIsTouched;\n\n  const enteredEmailisValid =\n    enteredEmail.trim() !== '' && ValidateEmail(enteredEmail);\n  const emailInputIsInvalid = !enteredEmailisValid && emailInputIsTouched;\n\n  useEffect(() => {\n    if (enteredNameisValid && enteredEmailisValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [enteredNameisValid, enteredEmailisValid]);\n\n  //email validation\n\n  // every key stroke\n  // const changeNameHandler = e => {\n  //   setEnteredName(e.target.value);\n  // };\n  const changeEmailHandler = e => {\n    setEnteredEmail(e.target.value);\n  };\n\n  // when lost focus\n  // const nameInputBlurHandler = e => {\n  //   setInputIsTouched(true);\n  // };\n  const emailInputBlurHandler = e => {\n    setEmailInputIsTouched(true);\n  };\n\n  // on submit\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (!enteredNameisValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    console.log(enteredEmail);\n    resetNameInput();\n\n    setEnteredEmail('');\n    setEmailInputIsTouched(false);\n  };\n\n  const nameInputClasses = nameInputHasError\n    ? 'form-control invalid'\n    : 'form-control';\n\n  const emailInputClasses = emailInputIsInvalid\n    ? 'form-control invalid'\n    : 'form-control';\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text'\n          id='name'\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n          // ref={refName}\n        />\n        {nameInputHasError && (\n          <p className='error-text'>Name field cannot be empty.</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input\n          type='email'\n          id='email'\n          onChange={changeEmailHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputIsInvalid && (\n          <p className='error-text'>Email is not valid.</p>\n        )}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n","D:\\informatyka-programowanie-nauka\\HTML-JS\\git repo\\Learning-Stuff-GitHub\\React\\MaxSchwarzmüller-Udemy\\FormsInputs\\src\\components\\hooks\\use-input.js",[],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":23,"column":16,"nodeType":"30","messageId":"31","endLine":23,"endColumn":17,"suggestions":"32"},{"ruleId":"28","severity":1,"message":"29","line":23,"column":32,"nodeType":"30","messageId":"31","endLine":23,"endColumn":33,"suggestions":"33"},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["36","37"],["38","39"],"no-global-assign","no-unsafe-negation",{"messageId":"40","fix":"41","desc":"42"},{"messageId":"43","fix":"44","desc":"45"},{"messageId":"40","fix":"46","desc":"42"},{"messageId":"43","fix":"47","desc":"45"},"removeEscape",{"range":"48","text":"49"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"50","text":"51"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"52","text":"49"},{"range":"53","text":"51"},[736,737],"",[736,736],"\\",[752,753],[752,752]]